{
    "manifests": {
        "shopware/paas-meta": {
            "manifest": {
                "copy-from-recipe": {
                    ".platform/": ".platform/",
                    "bin/": "%BIN_DIR%/",
                    "config/": "%CONFIG_DIR%/",
                    "files/": "files/",
                    "root/": ""
                },
                "container": {
                    "default_redis_database": "0",
                    "default_redis_host": "rediscache.internal",
                    "default_redis_port": "6379",
                    "env(CACHE_URL)": "redis://localhost"
                }
            },
            "files": {
                ".platform/applications.yaml": {
                    "contents": [
                        "-   name: app\r",
                        "    type: php:8.3\r",
                        "    build:\r",
                        "        flavor: none\r",
                        "    dependencies:\r",
                        "        php:\r",
                        "            composer/composer: \"2.8\"\r",
                        "    variables:\r",
                        "        env:\r",
                        "            APP_ENV: prod\r",
                        "            # Enable HTTP Cache to get cache-control headers\r",
                        "            SHOPWARE_HTTP_CACHE_ENABLED: 1\r",
                        "            NODE_VERSION: v22.17.0\r",
                        "            SHOPWARE_CLI_VERSION: 0.6.17\r",
                        "            # Elasticsearch, see https://developer.shopware.com/docs/guides/hosting/infrastructure/elasticsearch#activating-and-first-time-indexing\r",
                        "            SHOPWARE_ES_ENABLED: 0\r",
                        "            SHOPWARE_ES_INDEXING_ENABLED: 0\r",
                        "            SHOPWARE_ES_INDEX_PREFIX: \"sw6\"\r",
                        "            # Disables the Shopware web installer\r",
                        "            SHOPWARE_SKIP_WEBINSTALLER: 1\r",
                        "            # Performance optimization\r",
                        "            COMPOSER_ROOT_VERSION: 1.0.0\r",
                        "        php:\r",
                        "            upload_max_filesize: 32M\r",
                        "            post_max_size: 32M\r",
                        "            memory_limit: 512M\r",
                        "            \"zend.assertions\": -1\r",
                        "            \"opcache.enable_file_override\": 1\r",
                        "            \"opcache.interned_strings_buffer\": 20\r",
                        "            \"opcache.validate_timestamps\": 0\r",
                        "            \"zend.detect_unicode\": 0\r",
                        "            realpath_cache_ttl: 3600\r",
                        "            \"opcache.memory_consumption\": 128M\r",
                        "            \"opcache.max_accelerated_files\": 20000\r",
                        "    # Specify additional PHP extensions that should be loaded.\r",
                        "    runtime:\r",
                        "        extensions:\r",
                        "            - ctype\r",
                        "            - dom\r",
                        "            - iconv\r",
                        "            - mbstring\r",
                        "            - fileinfo\r",
                        "            - intl\r",
                        "            - redis\r",
                        "            - sodium\r",
                        "            - amqp\r",
                        "    # The hooks that will be performed when the package is deployed.\r",
                        "    hooks:\r",
                        "        build: |\r",
                        "            set -e\r",
                        "            echo \"Installing Node ${NODE_VERSION} and shopware-cli ${SHOPWARE_CLI_VERSION}\"\r",
                        "\r",
                        "            mkdir -p /tmp/tools\r",
                        "\r",
                        "            curl -qL -s -o node.tar.xz \"https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.xz\"\r",
                        "            tar xf node.tar.xz -C /tmp/tools --strip-components=1\r",
                        "            curl -qL -s -o shopware-cli.tar.gz https://github.com/shopware/shopware-cli/releases/download/${SHOPWARE_CLI_VERSION}/shopware-cli_Linux_x86_64.tar.gz\r",
                        "            tar xf shopware-cli.tar.gz -C /tmp/tools shopware-cli\r",
                        "            mv /tmp/tools/shopware-cli /tmp/tools/bin\r",
                        "\r",
                        "            rm node.tar.xz shopware-cli.tar.gz\r",
                        "\r",
                        "            export PATH=\"/tmp/tools/bin:$PATH\"\r",
                        "\r",
                        "            export APP_CACHE_DIR=$PLATFORM_APP_DIR/localCache\r",
                        "            export SHOPWARE_SKIP_ASSET_INSTALL_CACHE_INVALIDATION=1\r",
                        "\r",
                        "            shopware-cli project ci .\r",
                        "\r",
                        "            # Moving files of the mounts to avoid warnings\r",
                        "            mv $APP_CACHE_DIR ./RO-localCache\r",
                        "            mv ./var ./RO-var\r",
                        "\r",
                        "        deploy: |\r",
                        "            set -e\r",
                        "\r",
                        "            echo \"Syncing files created during the build in the mounts\"\r",
                        "            rsync -av --delete \"${PLATFORM_APP_DIR}/RO-localCache/\" \"${APP_CACHE_DIR}/\"\r",
                        "            rsync -av \"${PLATFORM_APP_DIR}/RO-var/\" \"${PLATFORM_APP_DIR}/var/\"\r",
                        "\r",
                        "            echo \"Create Dompdf working directories and sync fonts from the vendor folder\"\r",
                        "            if [ ! -d \"${PLATFORM_APP_DIR}/var/dompdf/tempDir\" ]; then\r",
                        "                mkdir -p \"${PLATFORM_APP_DIR}/var/dompdf/tempDir\"\r",
                        "            fi\r",
                        "            if [ ! -d \"${PLATFORM_APP_DIR}/var/dompdf/fontCache\" ]; then\r",
                        "                mkdir -p \"${PLATFORM_APP_DIR}/var/dompdf/fontCache\"\r",
                        "            fi\r",
                        "            rsync -av \"${PLATFORM_APP_DIR}/vendor/dompdf/dompdf/lib/fonts\" \"${PLATFORM_APP_DIR}/var/dompdf/fontDir\"\r",
                        "\r",
                        "            php vendor/bin/shopware-deployment-helper run --skip-asset-install --skip-theme-compile\r",
                        "\r",
                        "            if [ \"$PLATFORM_ENVIRONMENT_TYPE\" != production ]; then\r",
                        "                echo \"===================================================\"\r",
                        "                echo \"UPDATE SALES CHANNEL DOMAIN IF ENVIRONMENT TYPE IS NOT PRODUCTION\"\r",
                        "                echo \"===================================================\"\r",
                        "\r",
                        "                export FRONTEND_URL=`echo $PLATFORM_ROUTES | base64 --decode | jq -r 'to_entries[] | select(.value.id==\"shopware\") | .key'`\r",
                        "                export FRONTEND_DOMAIN=`php -r 'echo parse_url($_SERVER[\"FRONTEND_URL\"], PHP_URL_HOST);'`\r",
                        "                bin/console sales-channel:update:domain \"$FRONTEND_DOMAIN\"\r",
                        "            fi\r",
                        "        post_deploy: |\r",
                        "            set -e\r",
                        "\r",
                        "            php bin/console theme:compile --sync\r",
                        "\r",
                        "    # The relationships of the application with services or other applications.\r",
                        "    # The left-hand side is the name of the relationship as it will be exposed\r",
                        "    # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand\r",
                        "    # side is in the form `<service name>:<endpoint name>`.\r",
                        "    relationships:\r",
                        "        database: \"db:mysql\"\r",
                        "        rediscache: \"cacheredis:redis\"\r",
                        "        redissession: \"sessionredis:redis\"\r",
                        "        # comment to disable rabbitmq\r",
                        "        rabbitmqqueue: \"rabbitmq:rabbitmq\"\r",
                        "        # uncomment if you want to use opensearch/elasticsearch\r",
                        "        # opensearch: \"opensearch:opensearch\"\r",
                        "    # The size of the persistent disk of the application (in MB).\r",
                        "    disk: 2048\r",
                        "    # The mounts that will be performed when the package is deployed.\r",
                        "    mounts:\r",
                        "        \"/files\":\r",
                        "            source: service\r",
                        "            service: fileshare\r",
                        "            source_path: \"files\"\r",
                        "        \"/public/media\":\r",
                        "            source: service\r",
                        "            service: fileshare\r",
                        "            source_path: \"public/media\"\r",
                        "        \"/public/thumbnail\":\r",
                        "            source: service\r",
                        "            service: fileshare\r",
                        "            source_path: \"public/thumbnail\"\r",
                        "        \"/public/theme\":\r",
                        "            source: service\r",
                        "            service: fileshare\r",
                        "            source_path: \"public/theme\"\r",
                        "        \"/public/sitemap\":\r",
                        "            source: service\r",
                        "            service: fileshare\r",
                        "            source_path: \"public/sitemap\"\r",
                        "        \"/var\":\r",
                        "            source: service\r",
                        "            service: fileshare\r",
                        "            source_path: \"var\"\r",
                        "        \"/localCache\":\r",
                        "            source: local\r",
                        "            source_path: \"localCache\"\r",
                        "\r",
                        "    # The configuration of app when it is exposed to the web.\r",
                        "    web:\r",
                        "        locations:\r",
                        "            \"/\":\r",
                        "                # The public directory of the app, relative to its root.\r",
                        "                root: \"public\"\r",
                        "                # The front-controller script to send non-static requests to.\r",
                        "                passthru: \"/index.php\"\r",
                        "                expires: 24h\r",
                        "                rules:\r",
                        "                    \\.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|cast|mp4|json|yaml|ico|svg?|cast|mp4|json|yaml|svg?|ttf)$:\r",
                        "                        expires: 4w\r",
                        "    workers:\r",
                        "        queue:\r",
                        "            disk: 128\r",
                        "            commands:\r",
                        "                pre_start: |\r",
                        "                    export APP_CACHE_DIR=$PLATFORM_APP_DIR/localCache\r",
                        "                    rm -rf $APP_CACHE_DIR/var\r",
                        "                    php $PLATFORM_APP_DIR/bin/console\r",
                        "                start: APP_CACHE_DIR=$PLATFORM_APP_DIR/localCache bin/console messenger:consume async low_priority failed --memory-limit=$(cat /run/config.json | jq .info.limits.memory)M --time-limit=295\r",
                        "\r",
                        "    crons:\r",
                        "        scheduler:\r",
                        "            spec: '*/5 * * * *'\r",
                        "            cmd: 'APP_CACHE_DIR=/app/localCache php bin/console scheduled-task:run --no-wait'\r",
                        ""
                    ],
                    "executable": false
                },
                ".platform/routes.yaml": {
                    "contents": [
                        "# The routes of the project.",
                        "#",
                        "# Each route describes how an incoming URL is going",
                        "# to be processed by Platform.sh.",
                        "\"https://{default}/\":",
                        "    type: upstream",
                        "    id: shopware",
                        "    upstream: \"app:http\"",
                        "    cache:",
                        "        enabled: true",
                        "        cookies: [\"/^ss?ess/\"]",
                        ""
                    ],
                    "executable": false
                },
                ".platform/services.yaml": {
                    "contents": [
                        "db:",
                        "    type: mariadb:11.4",
                        "    disk: 2048",
                        "cacheredis:",
                        "    type: redis:7.2",
                        "    configuration:",
                        "        maxmemory_policy: volatile-lfu",
                        "sessionredis:",
                        "    type: redis-persistent:7.2",
                        "    disk: 1024",
                        "    configuration:",
                        "        maxmemory_policy: allkeys-lru",
                        "# comment if you want to disable rabbitmq",
                        "",
                        "rabbitmq:",
                        "    type: rabbitmq:3.13",
                        "    disk: 1024",
                        "# uncomment if you want to use opensearch",
                        "",
                        "#opensearch:",
                        "#    type: opensearch:2",
                        "#    disk: 256",
                        "# Change the disk space according to your needs for a.o. media files",
                        "fileshare:",
                        "    type: network-storage:2.0",
                        "    disk: 4096",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/paas.yaml": {
                    "contents": [
                        "# yaml-language-server: $schema=https://raw.githubusercontent.com/shopware/shopware/refs/heads/trunk/config-schema.json",
                        "# This file contains all default configuration or PaaS",
                        "framework:",
                        "    session:",
                        "        handler_id: \"%env(SESSION_REDIS_URL)%/0?persistent=1\"",
                        "    cache:",
                        "        app: cache.adapter.redis",
                        "        system: cache.adapter.redis",
                        "        default_redis_provider: \"%env(CACHE_URL)%/0?persistent=1\"",
                        "shopware:",
                        "    admin_worker:",
                        "        enable_admin_worker: false",
                        "        enable_queue_stats_worker: false",
                        "    deployment:",
                        "        cluster_setup: true",
                        "    dompdf:",
                        "        options:",
                        "            tempDir: \"%kernel.project_dir%/var/dompdf/tempDir\"",
                        "            fontDir: \"%kernel.project_dir%/var/dompdf/fontDir\"",
                        "            fontCache: \"%kernel.project_dir%/var/dompdf/fontCache\"",
                        "monolog:",
                        "    handlers:",
                        "        main:",
                        "            type: fingers_crossed",
                        "            action_level: error",
                        "            handler: nested",
                        "            excluded_http_codes: [404, 405]",
                        "            buffer_size: 50",
                        "        nested:",
                        "            type: stream",
                        "            path: php://stderr",
                        "            level: debug",
                        "            formatter: monolog.formatter.json",
                        "        console:",
                        "            type: console",
                        "            process_psr_3_messages: false",
                        "            channels: [\"!event\", \"!doctrine\"]",
                        "elasticsearch:",
                        "    index_settings:",
                        "        number_of_replicas: null",
                        "        number_of_shards: null",
                        ""
                    ],
                    "executable": false
                },
                "root/.environment": {
                    "contents": [
                        "export APP_CACHE_DIR=$PLATFORM_APP_DIR/localCache",
                        ""
                    ],
                    "executable": false
                },
                "root/.shopware-project.yaml": {
                    "contents": [
                        "deployment:",
                        "    cache:",
                        "        always_clear: true",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "0adf1b98fd18595e75c745e0786ab6cccf6212cc"
        }
    }
}
